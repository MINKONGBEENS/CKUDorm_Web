generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String
  role          String    @default("USER")
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Student {
  id            String         @id @default(cuid())
  studentId     String         @unique
  name          String
  roomNumber    String?
  department    String
  phoneNumber   String?
  status        String         @default("ACTIVE")
  meritPoints   Int            @default(0)
  demeritPoints Int            @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  pointHistory  PointHistory[]
}

model PointHistory {
  id        String   @id @default(cuid())
  studentId String
  type      String
  points    Int
  reason    String
  createdAt DateTime @default(now())
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model ckudorm {
  id            Int    @id @default(autoincrement())
  name          String @db.VarChar(50)
  department_id Int
  grade         Int
  student_id    String @db.VarChar(20)
  phone         String @db.VarChar(20)
  dormitory     String @db.VarChar(50)
  room_number   String @db.VarChar(10)
  password      String @db.VarChar(255)
}

model department {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)
}
